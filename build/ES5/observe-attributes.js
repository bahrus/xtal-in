import{XtalCustomEvent,registerTagName}from'./custom-event.js';var defaultTagName='observe-attributes',canonicalTagName='xtal-in-attributes',filter='filter',ObserveAttributes=function(a){function b(){return babelHelpers.classCallCheck(this,b),babelHelpers.possibleConstructorReturn(this,(b.__proto__||Object.getPrototypeOf(b)).apply(this,arguments))}return babelHelpers.inherits(b,a),babelHelpers.createClass(b,[{key:'attributeChangedCallback',value:function attributeChangedCallback(a,c,d){babelHelpers.get(b.prototype.__proto__||Object.getPrototypeOf(b.prototype),'attributeChangedCallback',this).call(this,a,c,d),a===filter?this._filter=JSON.parse(d):void 0}},{key:'getValues',value:function getValues(a){var b=this,c={};return a.forEach(function(a){c[a]=b._child[a]}),c}},{key:'addMutationObserver',value:function addMutationObserver(){var a=this;if(this.disconnect(),!!this._child){var b={attributes:!0,attributeFilter:this._filter};this._observer=new MutationObserver(function(b){b.forEach(function(b){a.detail={mutation:b}});var c=a.filter?a.getValues(a.filter):a._child.attributes;a.setValue(c)}),this._observer.observe(this._child,b)}}},{key:'getChild',value:function getChild(){var a=this;switch(this.childElementCount){case 0:return void setTimeout(function(){a.getChild()},100);case 1:this._child=this.firstElementChild,this.addMutationObserver();break;default:console.error('This component only supports a single element child');}}},{key:'disconnect',value:function disconnect(){this._observer&&this._observer.disconnect()}},{key:'connectedCallback',value:function connectedCallback(){babelHelpers.get(b.prototype.__proto__||Object.getPrototypeOf(b.prototype),'connectedCallback',this).call(this),this._upgradeProperties([filter]),this.getChild()}},{key:'filter',get:function get(){return this._filter},set:function set(a){this.setAttribute(filter,JSON.stringify(a))}}],[{key:'observedAttributes',get:function get(){return babelHelpers.get(b.__proto__||Object.getPrototypeOf(b),'observedAttributes',this).concat([filter])}}]),b}(XtalCustomEvent);registerTagName(defaultTagName,ObserveAttributes);var XtalInAttributes=function(a){function b(){return babelHelpers.classCallCheck(this,b),babelHelpers.possibleConstructorReturn(this,(b.__proto__||Object.getPrototypeOf(b)).apply(this,arguments))}return babelHelpers.inherits(b,a),b}(ObserveAttributes);customElements.define(canonicalTagName,XtalInAttributes);