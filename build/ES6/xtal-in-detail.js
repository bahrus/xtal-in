define(["require","exports"],function(a,b){"use strict";Object.defineProperty(b,"__esModule",{value:!0});const c="xtal-in-detail",d="bubbles",e="composed",f="dispatch",g="detail",h="event-name";class i extends HTMLElement{get bubbles(){return this._bubbles}set bubbles(a){a?this.setAttribute(d,""):this.removeAttribute(d)}get composed(){return this._composed}set composed(a){a?this.setAttribute(e,""):this.removeAttribute(e)}get dispatch(){return this._dispatch}set dispatch(a){a?this.setAttribute(f,""):this.removeAttribute(f)}get detail(){return this._detail}set detail(a){this._detail=a,this.onPropsChange()}get eventName(){return this.getAttribute(h)}set eventName(a){this.setAttribute(h,a)}onPropsChange(){this.dispatch&&this._detail&&this.eventName&&this.emitEvent()}emitEvent(){const a=new CustomEvent(this.eventName,{detail:this.detail,bubbles:this.bubbles,composed:this.composed});this.dispatchEvent(a)}static get observedAttributes(){return[d,e,f,g,h]}_upgradeProperty(a){if(this.hasOwnProperty(a)){let b=this[a];delete this[a],this[a]=b}}snakeToCamel(a){return a.replace(/(\-\w)/g,function(a){return a[1].toUpperCase()})}connectedCallback(){i.observedAttributes.forEach((a)=>{this._upgradeProperty(this.snakeToCamel(a))})}attributeChangedCallback(a,b,c){a===d||a===f||a===e?this["_"+this.snakeToCamel(a)]=null!==c:a===g?this._detail=JSON.parse(c):void 0;this.onPropsChange()}}b.XtalInDetail=i,customElements.get(c)&&customElements.define(c,i)});