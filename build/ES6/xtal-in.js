(function(){function a(a,b){let c=a;const d=document.head.querySelector(`[data-was="${a}"][data-package="npm.xtal-in"]`);if(d){const a=d.dataset.is;a&&(c=a)}customElements.get(c)||customElements.define(c,b)}function b(b,c){'loading'===document.readyState?document.addEventListener('DOMContentLoaded',()=>{a(b,c)}):a(b,c)}const c='xtal-in-detail',d='bubbles',e='composed',f='dispatch',g='detail',h='event-name';class i extends HTMLElement{get bubbles(){return this._bubbles}set bubbles(a){a?this.setAttribute(d,''):this.removeAttribute(d)}get composed(){return this._composed}set composed(a){a?this.setAttribute(e,''):this.removeAttribute(e)}get dispatch(){return this._dispatch}set dispatch(a){a?this.setAttribute(f,''):this.removeAttribute(f)}get detail(){return this._detail}set detail(a){this._detail=a,this.onPropsChange()}get eventName(){return this.getAttribute(h)}set eventName(a){this.setAttribute(h,a)}get value(){return this._value}setValue(a){this._value=a;const b=new CustomEvent('value-changed',{detail:{value:a},bubbles:!0,composed:!1});this.dispatchEvent(b)}onPropsChange(){this._dispatch&&this._detail&&this.eventName&&this.emitEvent()}emitEvent(){const a=new CustomEvent(this.eventName,{detail:this.detail,bubbles:this.bubbles,composed:this.composed});this.dispatchEvent(a),this._isSubClass||this.setValue(a.detail)}static get observedAttributes(){return[d,e,f,g,h]}_upgradeProperties(a){a.forEach((a)=>{if(this.hasOwnProperty(a)){let b=this[a];delete this[a],this[a]=b}})}snakeToCamel(a){return a.replace(/(\-\w)/g,function(a){return a[1].toUpperCase()})}connectedCallback(){this._upgradeProperties(i.observedAttributes.map((a)=>this.snakeToCamel(a)))}attributeChangedCallback(a,b,c){a===d||a===f||a===e?this['_'+this.snakeToCamel(a)]=null!==c:a===g?this._detail=JSON.parse(c):void 0;this.onPropsChange()}}if(!customElements.get(c)){b('custom-event',i);customElements.define(c,class extends i{})}const j='filter';class k extends i{get filter(){return this._filter}set filter(a){this.setAttribute(j,JSON.stringify(a))}static get observedAttributes(){return super.observedAttributes.concat([j])}attributeChangedCallback(a,b,c){super.attributeChangedCallback(a,b,c);a===j?this._filter=JSON.parse(c):void 0}getValues(a){const b={};return a.forEach((a)=>{b[a]=this._child[a]}),b}addMutationObserver(){if(this.disconnect(),!!this._child){const a={attributes:!0,attributeFilter:this._filter};this._observer=new MutationObserver((a)=>{a.forEach((a)=>{this.detail={mutation:a}});const b=this.filter?this.getValues(this.filter):this._child.attributes;this.setValue(b)}),this._observer.observe(this._child,a)}}getChild(){switch(this.childElementCount){case 0:return void setTimeout(()=>{this.getChild()},100);case 1:this._child=this.firstElementChild,this.addMutationObserver();break;default:console.error('This component only supports a single element child');}}disconnect(){this._observer&&this._observer.disconnect()}connectedCallback(){super.connectedCallback(),this._upgradeProperties([j]),this.getChild()}}b('observe-attributes',k);customElements.define('xtal-in-attributes',class extends k{});const l='watch-subtree';class m extends i{constructor(){super(),this._mutationCount=0,this._isSubClass=!0}static get observedAttributes(){return super.observedAttributes.concat([l])}get watchSubtree(){return this._watchSubtree}set watchSubtree(a){a?this.setAttribute(l,''):this.removeAttribute(l)}attributeChangedCallback(a,b,c){super.attributeChangedCallback(a,b,c);a===l?(this._watchSubtree=null!==c,this.disconnect(),this.addMutationObserver()):void 0}disconnect(){this._observer&&this._observer.disconnect()}addMutationObserver(){var a={childList:!0,subtree:this._watchSubtree};this._observer=new MutationObserver((a)=>{a.forEach((a)=>{this.detail={mutation:a}}),this._mutationCount++,this.setValue(this._mutationCount)}),this.detail={status:'observing'},this.setValue(this._mutationCount),this._observer.observe(this,a)}connectedCallback(){super.connectedCallback(),this.addMutationObserver()}disconnedCallback(){this.disconnect()}}b('observe-children',m);customElements.define('xtal-in-children',class extends m{});const n='stop-propagation',o='on',p='if-matches',q='value-props',r='xtal-in-curry';class s extends i{constructor(){super(),this._isSubClass=!0}get stopPropagation(){return this._stopPropagation}set stopPropagation(a){a?this.setAttribute(n,''):this.removeAttribute(n)}get on(){return this._on}set on(a){this.setAttribute(o,a)}get ifMatches(){return this._ifMatches}set ifMatches(a){this.setAttribute(p,a)}get valueProps(){return this._valueProps}set valueProps(a){this.setAttribute(q,a.toString())}static get observedAttributes(){return super.observedAttributes.concat([n,o,p,q])}attributeChangedCallback(a,b,c){switch(super.attributeChangedCallback(a,b,c),a){case n:this._stopPropagation=null!==c;break;case q:this._valueProps=null===c?null:c.startsWith('[')?JSON.parse(c):c;case p:this._ifMatches=c;break;case o:this._on=c;const d=this.parentElement;let e=d[r];if(this._on){e||(e=d[r]={});let a=e[this._on];a||(a=e[this._on]=[],this.parentElement.addEventListener(this._on,this.handleEvent)),a.push(this)}else this.disconnect();}}handleEvent(a){const b=this['xtal-in-curry'][a.type];b.forEach((b)=>{const c=a.target;if(b._ifMatches&&!c.matches(b._ifMatches))return;b.stopPropagation&&a.stopPropagation();const d={context:b.detail};let e;this._valueProps&&(Array.isArray(this._valueProps)?(e={},this._valueProps.forEach((a)=>{e[a]=c[a]})):e=c[this._valueProps],d.values=e),b.detail=d,b.setValue(e)})}removeElement(a,b){const c=a.indexOf(b);-1!==c&&a.splice(c,1)}disconnect(){const a=this.parentElement;let b=a[r];const c=b[this._on];this.removeElement(c,this),0===c.length&&this.parentElement.removeEventListener(this._on,this.handleEvent)}connectedCallback(){super.connectedCallback(),this._upgradeProperties(['on','stopPropagation','valueProps'])}disconnectedCallback(){this.disconnect()}}b('add-event-listener',s);customElements.define(r,class extends s{})})();