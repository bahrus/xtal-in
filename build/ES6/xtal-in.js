(function(){const canonicalTagName="xtal-in-detail",bubbles="bubbles",composed="composed",dispatch="dispatch",disabled="disabled",detail="detail",event_name="event-name",debounce_duration="debounce-duration",zoom_in="zoom-in",zoom_out="zoom-out";function debounce(func,wait,immediate){var timeout;return function(){var context=this,args=arguments,callNow=immediate&&!timeout;clearTimeout(timeout);timeout=setTimeout(function(){timeout=null;if(!immediate)func.apply(context,args)},wait);if(callNow)func.apply(context,args)}}class XtalCustomEvent extends HTMLElement{constructor(){super(...arguments);this._debounceDuration=0}get bubbles(){return this._bubbles}set bubbles(val){if(val){this.setAttribute(bubbles,"")}else{this.removeAttribute(bubbles)}}get composed(){return this._composed}set composed(val){if(val){this.setAttribute(composed,"")}else{this.removeAttribute(composed)}}get disabled(){return this._disabled||this.hasAttribute(disabled)}set disabled(val){if(val){this.setAttribute(disabled,"")}else{this.removeAttribute(disabled)}}get dispatch(){return this._dispatch}set dispatch(val){if(val){this.setAttribute(dispatch,"")}else{this.removeAttribute(dispatch)}}get detail(){return this._detail}set detail(val){this._detail=val;this._zoomedDetail=this.zoom(this._detail);this.onPropsChange()}get debounceDuration(){return this._debounceDuration}set debounceDuration(val){this.setAttribute(debounce_duration,val.toString())}get eventName(){return this.getAttribute(event_name)}set eventName(val){this.setAttribute(event_name,val)}get zoomIn(){return this.getAttribute(zoom_in)}set zoomIn(val){this.setAttribute(zoom_in,val)}get zoomOut(){return this.getAttribute(zoom_out)}set zoomOut(val){this.setAttribute(zoom_out,val)}zoomInObject(obj){if(!this.zoomIn)return obj;let returnObj=obj;const split=this.zoomIn.split(".");for(let i=0,ii=split.length;i<ii;i++){const selector=split[i];returnObj=returnObj[selector];if(!returnObj)return null}return returnObj}zoomOutObject(obj){if(!this.zoomOut)return obj;let returnObj=obj;this.zoomOut.split(".").forEach(()=>{returnObj={token:returnObj}});return returnObj}zoom(obj){if(null===obj)return obj;return this.zoomInObject(this.zoomOutObject(obj))}get result(){return this._result}setResult(val){this._result=val;const newEvent=new CustomEvent("result-changed",{detail:{value:val},bubbles:!0,composed:!1});this.dispatchEvent(newEvent)}onPropsChange(){if(!this._dispatch||!this._detail||!this.eventName||this.disabled)return;if(this._debounceFunction){this._debounceFunction()}else{this.emitEvent()}}emitEvent(){const newEvent=new CustomEvent(this.eventName,{detail:this._zoomedDetail,bubbles:this.bubbles,composed:this.composed});this.dispatchEvent(newEvent);if(!this._isSubClass&&newEvent.detail){this.setResult(newEvent.detail.value,newEvent)}}static get observedAttributes(){return[bubbles,composed,dispatch,detail,event_name,debounce_duration,zoom_in,zoom_out]}_upgradeProperties(props){props.forEach(prop=>{if(this.hasOwnProperty(prop)){let value=this[prop];delete this[prop];this[prop]=value}})}connectedCallback(){this._upgradeProperties(XtalCustomEvent.observedAttributes.map(attrib=>snakeToCamel(attrib)))}attributeChangedCallback(name,oldValue,newValue){switch(name){case bubbles:case dispatch:case composed:case disabled:this["_"+snakeToCamel(name)]=null!==newValue;break;case detail:this._detail=this.zoom(JSON.parse(newValue));break;case debounce_duration:this._debounceDuration=parseFloat(newValue);if(0<this._debounceDuration){this._debounceFunction=debounce(()=>{this.emitEvent()},this._debounceDuration)}break;}this.onPropsChange()}}function registerTagName(defaultTagName,cls){const h=document.head;if(!h)return;const scTagName="xtalIn"+snakeToCamel(defaultTagName)+"Alias";let tagName=defaultTagName;const alias=h.dataset[scTagName];if(alias){tagName=alias}customElements.define(tagName,cls)}function snakeToCamel(s){return s.replace(/(\-\w)/g,function(m){return m[1].toUpperCase()})}if(!customElements.get(canonicalTagName)){registerTagName("custom-event",XtalCustomEvent);customElements.define(canonicalTagName,class extends XtalCustomEvent{})}const filter="filter";class ObserveAttributes extends XtalCustomEvent{get filter(){return this._filter}set filter(val){this.setAttribute(filter,JSON.stringify(val))}static get observedAttributes(){return super.observedAttributes.concat([filter])}attributeChangedCallback(name,oldValue,newValue){super.attributeChangedCallback(name,oldValue,newValue);switch(name){case filter:this._filter=JSON.parse(newValue);break;}}getValues(attributes){const attribs={};attributes.forEach(attrib=>{attribs[attrib]=this._child[attrib]});return attribs}addMutationObserver(){this.disconnect();if(!this._child)return;const config={attributes:!0,attributeFilter:this._filter};this._observer=new MutationObserver(mutationsList=>{mutationsList.forEach(mutation=>{this.detail={mutation}});const attribs=this.filter?this.getValues(this.filter):this._child.attributes;this.setResult(attribs,null)});this._observer.observe(this._child,config)}getChild(){switch(this.childElementCount){case 0:setTimeout(()=>{this.getChild()},100);return;case 1:this._child=this.firstElementChild;this.addMutationObserver();break;default:console.error("This component only supports a single element child");}}disconnect(){if(this._observer)this._observer.disconnect()}connectedCallback(){super.connectedCallback();this._upgradeProperties([filter]);this.getChild()}}registerTagName("observe-attributes",ObserveAttributes);customElements.define("xtal-in-attributes",class extends ObserveAttributes{});const watchSubtree="watch-subtree";class ObserveChildren extends XtalCustomEvent{constructor(){super();this._mutationCount=0;this._isSubClass=!0}static get observedAttributes(){return super.observedAttributes.concat([watchSubtree])}get watchSubtree(){return this.hasAttribute(watchSubtree)}set watchSubtree(val){if(val){this.setAttribute(watchSubtree,"")}else{this.removeAttribute(watchSubtree)}}attributeChangedCallback(name,oldValue,newValue){super.attributeChangedCallback(name,oldValue,newValue);switch(name){case watchSubtree:this._watchSubtree=null!==newValue;this.disconnect();this.addMutationObserver();break;}}disconnect(){if(this._observer)this._observer.disconnect()}addMutationObserver(){const config={childList:!0,subtree:this._watchSubtree};this._observer=new MutationObserver(mutationsList=>{this.detail=mutationsList;this._mutationCount++;this.setResult(this._mutationCount,null)});this.setResult(this._mutationCount,null);this._observer.observe(this.parentElement,config)}connectedCallback(){super.connectedCallback();this.disconnect();this.addMutationObserver()}disconnedCallback(){this.disconnect()}}registerTagName("observe-children",ObserveChildren);customElements.define("xtal-in-children",class extends ObserveChildren{});const mediaQueryString="media-query-string",canonicalTagName_XtalInMedia="xtal-in-media",matchesMediaQuery="matches-media-query";class MatchMedia extends XtalCustomEvent{static get is(){return"match-media"}get mediaQueryString(){return this._mediaQueryString}set mediaQueryString(val){this.setAttribute(mediaQueryString,val)}static get observedAttributes(){return[mediaQueryString]}attributeChangedCallback(name,oldValue,newValue){switch(name){case mediaQueryString:this.disconnect();this._mediaQueryString=newValue;if(null!==newValue){this._mql=window.matchMedia(this._mediaQueryString);this._boundMediaQueryHandler=this.handleMediaQueryChange.bind(this);this.connect()}}}connect(){this._mql.addListener(this._boundMediaQueryHandler)}disconnect(){if(this._mql)this._mql.removeListener(this._boundMediaQueryHandler)}handleMediaQueryChange(e){if(e.matches){this.setAttribute(matchesMediaQuery,"")}else{this.removeAttribute(matchesMediaQuery)}this.detail=e;this.setResult(e.matches,null)}connectedCallback(){this._upgradeProperties(["mediaQueryString"])}disconnectedCallback(){this.disconnect()}}if(!customElements.get(canonicalTagName_XtalInMedia)){registerTagName(MatchMedia.is,MatchMedia);customElements.define(canonicalTagName_XtalInMedia,class extends MatchMedia{})}const stopPropagation="stop-propagation",on="on",ifMatches="if-matches",valueProps="value-props",disabledAttributeMatcher="disabled-attribute-matcher",canonicalTagName_XtalInCurry="xtal-in-curry";function getParent(el){const parent=el.parentNode;if(11===parent.nodeType){return parent.host}return parent}class AddEventListener extends XtalCustomEvent{constructor(){super();this._isSubClass=!0}get stopPropagation(){return this._stopPropagation||this.hasAttribute(stopPropagation)}set stopPropagation(val){if(val){this.setAttribute(stopPropagation,"")}else{this.removeAttribute(stopPropagation)}}get disabledAttributeMatcher(){return this._disabledAttributeMatcher||this.getAttribute(disabledAttributeMatcher)}set(val){if(val){this.setAttribute(disabledAttributeMatcher,"")}else{this.removeAttribute(disabledAttributeMatcher)}}get on(){return this._on}set on(val){this.setAttribute(on,val)}get ifMatches(){return this._ifMatches||this.getAttribute(ifMatches)}set ifMatches(val){this.setAttribute(ifMatches,val)}get valueProps(){return this._valueProps||this.getAttribute(valueProps)}set valueProps(val){this.setAttribute(valueProps,val.toString())}static get observedAttributes(){return super.observedAttributes.concat([stopPropagation,on,ifMatches,valueProps,disabledAttributeMatcher])}qsa(css,from){return[].slice.call((from?from:this).querySelectorAll(css))}attributeChangedCallback(name,oldValue,newValue){switch(name){case stopPropagation:this._stopPropagation=null!==newValue;break;case valueProps:this._valueProps=newValue;case ifMatches:this._ifMatches=newValue;break;case disabledAttributeMatcher:this._disabledAttributeMatcher=null!==newValue;case on:this._on=newValue;const parent=getParent(this);let bundledAllHandlers=parent[canonicalTagName_XtalInCurry];if(this._on){if(!this._boundEventHandler){this._boundEventHandler=this.handleEvent.bind(parent)}if(!bundledAllHandlers){bundledAllHandlers=parent[canonicalTagName_XtalInCurry]={}}let bundledHandlersForSingleEventType=bundledAllHandlers[this._on];if(!bundledHandlersForSingleEventType){bundledHandlersForSingleEventType=bundledAllHandlers[this._on]=[];parent.addEventListener(this._on,this._boundEventHandler)}bundledHandlersForSingleEventType.push(this);this.enableElements();if("loading"===document.readyState){document.addEventListener("DOMContentLoaded",()=>{this.enableElements()})}}else{this.disconnect()}break;}super.attributeChangedCallback(name,oldValue,newValue)}enableElements(){if(this.disabledAttributeMatcher){this.setAttribute("attached","");const parent=getParent(this);if(0<this.qsa(`:not(attached)[${this.disabledAttributeMatcher}]`,parent).length)return;this.qsa(`[disabled="${this.disabledAttributeMatcher}"]`,parent).forEach(el=>{el.removeAttribute("disabled")})}}modifyEvent(e,subscriber){if(subscriber.stopPropagation)e.stopPropagation()}handleEvent(e){const bundledHandlers=this["xtal-in-curry"][e.type];bundledHandlers.forEach(subscriber=>{const target=e.target;if(subscriber.ifMatches){if(!target.matches(subscriber.ifMatches))return}subscriber.modifyEvent(e,subscriber);if(this.valueProps){let values,hasMultipleValues=!1;if(-1<this.valueProps.indexOf(",")){hasMultipleValues=!0;values={};const parsedValueProps=this.valueProps.split(",");parsedValueProps.forEach(prop=>{values[prop]=target[prop]})}else{values=target[this._valueProps]}const eventObj={};if(values){if(hasMultipleValues){eventObj.values=values}else{eventObj.value=values}eventObj.context=e.detail}else{Object.assign(eventObj,e.detail)}subscriber.detail=eventObj}else{const detail=e.detail;switch(typeof detail){case"object":subscriber.detail=Object.assign({},detail);break;default:subscriber.detail=detail;}}let receipt;switch(typeof subscriber.detail){case"object":receipt=Object.assign({},subscriber.detail);default:receipt=subscriber.detail;}subscriber.setResult(receipt,e)})}removeElement(array,element){const index=array.indexOf(element);if(-1!==index){array.splice(index,1)}}disconnect(){const parent=getParent(this);let bundledAllHandlers=parent[canonicalTagName_XtalInCurry];const bundledHandlersForSingleEventType=bundledAllHandlers[this._on];this.removeElement(bundledHandlersForSingleEventType,this);if(0===bundledHandlersForSingleEventType.length&&this._boundEventHandler){parent.removeEventListener(this._on,this._boundEventHandler)}}connectedCallback(){super.connectedCallback();this._upgradeProperties(["on","stopPropagation","valueProps"])}disconnectedCallback(){this.disconnect()}}if(!customElements.get(canonicalTagName_XtalInCurry)){registerTagName("add-event-listener",AddEventListener);customElements.define(canonicalTagName_XtalInCurry,class extends AddEventListener{})}})();