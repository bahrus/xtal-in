import{XtalCustomEvent,registerTagName}from"./custom-event.js";const stopPropagation="stop-propagation",on="on",ifMatches="if-matches",valueProps="value-props",disabledAttributeMatcher="disabled-attribute-matcher",defaultTagName_addEventListener="add-event-listener",canonicalTagName_XtalInCurry="xtal-in-curry";export function getParent(el){const parent=el.parentNode;if(11===parent.nodeType){return parent.host}return parent}export class AddEventListener extends XtalCustomEvent{constructor(){super();this._isSubClass=!0}get stopPropagation(){return this._stopPropagation||this.hasAttribute(stopPropagation)}set stopPropagation(val){if(val){this.setAttribute(stopPropagation,"")}else{this.removeAttribute(stopPropagation)}}get disabledAttributeMatcher(){return this._disabledAttributeMatcher||this.getAttribute(disabledAttributeMatcher)}set(val){if(val){this.setAttribute(disabledAttributeMatcher,"")}else{this.removeAttribute(disabledAttributeMatcher)}}get on(){return this._on}set on(val){this.setAttribute(on,val)}get ifMatches(){return this._ifMatches||this.getAttribute(ifMatches)}set ifMatches(val){this.setAttribute(ifMatches,val)}get valueProps(){return this._valueProps||this.getAttribute(valueProps)}set valueProps(val){this.setAttribute(valueProps,val.toString())}static get observedAttributes(){return super.observedAttributes.concat([stopPropagation,on,ifMatches,valueProps,disabledAttributeMatcher])}qsa(css,from){return[].slice.call((from?from:this).querySelectorAll(css))}attributeChangedCallback(name,oldValue,newValue){switch(name){case stopPropagation:this._stopPropagation=null!==newValue;break;case valueProps:this._valueProps=newValue;case ifMatches:this._ifMatches=newValue;break;case disabledAttributeMatcher:this._disabledAttributeMatcher=null!==newValue;case on:this._on=newValue;const parent=getParent(this);let bundledAllHandlers=parent[canonicalTagName_XtalInCurry];if(this._on){if(!this._boundEventHandler){this._boundEventHandler=this.handleEvent.bind(parent)}if(!bundledAllHandlers){bundledAllHandlers=parent[canonicalTagName_XtalInCurry]={}}let bundledHandlersForSingleEventType=bundledAllHandlers[this._on];if(!bundledHandlersForSingleEventType){bundledHandlersForSingleEventType=bundledAllHandlers[this._on]=[];parent.addEventListener(this._on,this._boundEventHandler)}bundledHandlersForSingleEventType.push(this);this.enableElements();if("loading"===document.readyState){document.addEventListener("DOMContentLoaded",()=>{this.enableElements()})}}else{this.disconnect()}break;}super.attributeChangedCallback(name,oldValue,newValue)}enableElements(){if(this.disabledAttributeMatcher){this.setAttribute("attached","");const parent=getParent(this);if(0<this.qsa(`:not(attached)[${this.disabledAttributeMatcher}]`,parent).length)return;this.qsa(`[disabled="${this.disabledAttributeMatcher}"]`,parent).forEach(el=>{el.removeAttribute("disabled")})}}modifyEvent(e,subscriber){if(subscriber.stopPropagation)e.stopPropagation()}handleEvent(e){const bundledHandlers=this["xtal-in-curry"][e.type];bundledHandlers.forEach(subscriber=>{const target=e.target;if(subscriber.ifMatches){if(!target.matches(subscriber.ifMatches))return}subscriber.modifyEvent(e,subscriber);if(this.valueProps){let values,hasMultipleValues=!1;if(-1<this.valueProps.indexOf(",")){hasMultipleValues=!0;values={};const parsedValueProps=this.valueProps.split(",");parsedValueProps.forEach(prop=>{values[prop]=target[prop]})}else{values=target[this._valueProps]}const eventObj={};if(values){if(hasMultipleValues){eventObj.values=values}else{eventObj.value=values}eventObj.context=e.detail}else{Object.assign(eventObj,e.detail)}subscriber.detail=eventObj}else{const detail=e.detail;switch(typeof detail){case"object":subscriber.detail=Object.assign({},detail);break;default:subscriber.detail=detail;}}let receipt;switch(typeof subscriber.detail){case"object":receipt=Object.assign({},subscriber.detail);default:receipt=subscriber.detail;}subscriber.setResult(receipt,e)})}removeElement(array,element){const index=array.indexOf(element);if(-1!==index){array.splice(index,1)}}disconnect(){const parent=getParent(this);let bundledAllHandlers=parent[canonicalTagName_XtalInCurry];const bundledHandlersForSingleEventType=bundledAllHandlers[this._on];this.removeElement(bundledHandlersForSingleEventType,this);if(0===bundledHandlersForSingleEventType.length&&this._boundEventHandler){parent.removeEventListener(this._on,this._boundEventHandler)}}connectedCallback(){super.connectedCallback();this._upgradeProperties(["on","stopPropagation","valueProps"])}disconnectedCallback(){this.disconnect()}}if(!customElements.get(canonicalTagName_XtalInCurry)){registerTagName(defaultTagName_addEventListener,AddEventListener);customElements.define(canonicalTagName_XtalInCurry,class extends AddEventListener{})}