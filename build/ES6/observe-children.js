import{XtalCustomEvent,registerTagName}from"./custom-event.js";const defaultTagName_xtal_in_children="observe-children",canonicalTagName_xtal_in_children="xtal-in-children",watchSubtree="watch-subtree";class ObserveChildren extends XtalCustomEvent{constructor(){super();this._mutationCount=0;this._isSubClass=!0}static get observedAttributes(){return super.observedAttributes.concat([watchSubtree])}get watchSubtree(){return this.hasAttribute(watchSubtree)}set watchSubtree(val){if(val){this.setAttribute(watchSubtree,"")}else{this.removeAttribute(watchSubtree)}}attributeChangedCallback(name,oldValue,newValue){super.attributeChangedCallback(name,oldValue,newValue);switch(name){case watchSubtree:this._watchSubtree=null!==newValue;this.disconnect();this.addMutationObserver();break;}}disconnect(){if(this._observer)this._observer.disconnect()}addMutationObserver(){const config={childList:!0,subtree:this._watchSubtree};this._observer=new MutationObserver(mutationsList=>{this.detail=mutationsList;this._mutationCount++;this.setResult(this._mutationCount,null)});this.setResult(this._mutationCount,null);this._observer.observe(this.parentElement,config)}connectedCallback(){super.connectedCallback();this.disconnect();this.addMutationObserver()}disconnedCallback(){this.disconnect()}}registerTagName(defaultTagName_xtal_in_children,ObserveChildren);class XtalInChildren extends ObserveChildren{}customElements.define(canonicalTagName_xtal_in_children,XtalInChildren);